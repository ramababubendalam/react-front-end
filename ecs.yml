AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availabilty Zones. It deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the private subnets.
  It then deploys a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones.
  Finally, it deploys a pair of example ECS services from containers published in
  Amazon EC2 Container Registry (Amazon ECR).

Parameters:

  ReactBuild:
    Description: Image of front React
    Type: String


Resources:

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-refarch-cloudformation/infrastructure/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-refarch-cloudformation/infrastructure/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-refarch-cloudformation/infrastructure/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-refarch-cloudformation/infrastructure/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t3.medium
        ClusterSize: 2
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets


  WebsiteService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://deploy-lambda-scripts.s3.eu-west-2.amazonaws.com/service.yml
      Parameters:
        ReactBuild:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 1
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /
        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole

Outputs:

  WebsiteServiceUrl:
    Description: The URL endpoint for the website service
    Value: !Join ["", [!GetAtt ALB.Outputs.LoadBalancerUrl, "/"]]